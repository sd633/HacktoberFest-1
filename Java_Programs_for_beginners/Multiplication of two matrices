import java.io.*;
import java.util.Random;
  
class GFG { 
  
    static void initMatrix(int arr[][],int m,int n){
       for(int i=0;i<m;i++)
       {
        for(int j=0;j<n;j++)
        {
        arr[i][j]=rand.nextInt(20);
        }
       }
    }
    
    static void printMatrix(int M[][], 
                            int rowSize, 
                            int colSize) 
    { 
        for (int i = 0; i < rowSize; i++) { 
            for (int j = 0; j < colSize; j++) 
                System.out.print(M[i][j] + " "); 
  
            System.out.println(); 
        } 
    } 
  
    static void multiplyMatrix( 
        int row1, int col1, int A[][], 
        int row2, int col2, int B[][]) 
    { 
        int i, j, k; 
  
        // Print the matrices A and B 
        System.out.println("\nMatrix A:"); 
        printMatrix(A, row1, col1); 
        System.out.println("\nMatrix B:"); 
        printMatrix(B, row2, col2); 
  
        // Check if multiplication is Possible 
        if (row2 != col1) { 
  
            System.out.println( 
                "\nMultiplication Not Possible"); 
            return; 
        } 
  
       
        int C[][] = new int[row1][col2]; 
  
        // Multiply the two marices 
        for (i = 0; i < row1; i++) { 
            for (j = 0; j < col2; j++) { 
                for (k = 0; k < row2; k++) 
                    C[i][j] += A[i][k] * B[k][j]; 
            } 
        } 
  
   
        System.out.println("\nResultant Matrix:"); 
        printMatrix(C, row1, col2); 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        Random rand=new Random()
        int row1 = 4, col1 = 3, row2 = 3, col2 = 4; 
  
        int A[][] = new int[4][3];
  
        int B[][] = new int[3][4];
        
        initMatrix(A,4,3);
        initMatrix(B,3,4);
        
        multiplyMatrix(row1, col1, A, 
                       row2, col2, B); 
    } 
} 
